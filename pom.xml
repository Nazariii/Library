<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.softserve.edu.lv-157</groupId>
	<artifactId>library2</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>library2</name>

	<properties>
		<java-version>1.8</java-version>
		<hibernate.version>4.3.11.Final</hibernate.version>
		<hibernate.tool.version>4.3.1.Final</hibernate.tool.version>
		<hibernate.validator.version>5.2.1.Final</hibernate.validator.version>
		<mysql.driver.version>5.1.36</mysql.driver.version>
		<springframework.version>4.2.0.RELEASE</springframework.version>
		<springframework.security.version>4.0.2.RELEASE</springframework.security.version>
		<slf4j.version>1.7.12</slf4j.version>
		<log4j.version>2.3</log4j.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<modules>
		<module>library-repository</module>
		<module>library-service</module>
		<module>library-web</module>
	</modules>

	<!-- for spring data logger -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- Since slf4j is a bridge, you need an implementation of it that would 
				redirect all calls to slf4j or JCL. Following is to perform logging using 
				the basic implementation, choose your preferred implementation (it seems 
				you were using logback). -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-servlet-api</artifactId>
			<version>7.0.61</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>



	</dependencies>


	<build>
		<finalName>library2</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java-version}</source>
						<target>${java-version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<warName>library2</warName>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skipTests>true</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<configuration>
						<path>/</path>
						<uriEncoding>UTF-8</uriEncoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>